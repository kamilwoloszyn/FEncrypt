[{"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx":"1","/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts":"2","/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx":"3","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx":"4","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx":"5","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx":"6","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Encryption.tsx":"7","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Decryption.tsx":"8","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Send.tsx":"9","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Uploader.tsx":"10","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Progress.tsx":"11","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/forms.tsx":"12"},{"size":500,"mtime":1608319067528,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608199313291,"results":"15","hashOfConfig":"14"},{"size":1409,"mtime":1609003240678,"results":"16","hashOfConfig":"14"},{"size":995,"mtime":1608808930476,"results":"17","hashOfConfig":"14"},{"size":772,"mtime":1608730805133,"results":"18","hashOfConfig":"14"},{"size":593,"mtime":1608667148231,"results":"19","hashOfConfig":"14"},{"size":1519,"mtime":1608809944953,"results":"20","hashOfConfig":"14"},{"size":1387,"mtime":1608722151819,"results":"21","hashOfConfig":"14"},{"size":637,"mtime":1608665700864,"results":"22","hashOfConfig":"14"},{"size":1302,"mtime":1609004024008,"results":"23","hashOfConfig":"14"},{"size":1057,"mtime":1609001774564,"results":"24","hashOfConfig":"14"},{"size":441,"mtime":1608717874802,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ly50gx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx",[],["58","59"],"/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts",[],"/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx",["60","61"],"/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx",["62","63"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Row, Col } from '../../styles/layout/layout'\nimport '../../styles/scss/banner.scss'\nimport LogoImg from '../../images/FEncrypt_logo.png';\n\ninterface BackgroundInterface { \n  ContainImage: boolean;\n  BackgroundHref?: string;\n}\n\ninterface BannerWrapperProps { \n  Show: boolean; \n  ExtendedWidth: boolean;\n}\n\ninterface Props { \n  ShowBanner: boolean \n}\n\nconst BannerWrapper = styled.div<BannerWrapperProps>`\n${({ Show }) => Show ? 'display: block;' : ''}\n${({ ExtendedWidth }) => ExtendedWidth ? 'width: 100%;' : ''}\n`\n\nconst Background = styled.div<BackgroundInterface>`\n\nbackground-image: ${({ ContainImage, BackgroundHref }) => ContainImage ? `url(${BackgroundHref})`: '#ffff'}\n`\nexport const Banner: React.FC<Props>  = (Props) => { \n  return ( \n    <BannerWrapper Show={Props.ShowBanner} ExtendedWidth={true}>\n      <Row centered={true}>\n        <img src={LogoImg} alt=\"logo\" />\n      </Row>\n    </BannerWrapper>\n  )\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx",["64"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface RowProps {\n  centered?: boolean\n}\ninterface ColProps{\n  flex: number\n}\n\ninterface ContainerOption { \n  DisplayFlex: boolean;\n  HasMargin: boolean;\n  DefaultMargin?: number;\n}\n\n\nconst Container = styled.div<ContainerOption>`\n${({DisplayFlex}) => DisplayFlex ? 'display:flex;' : ''}\nmargin: ${({ HasMargin, DefaultMargin }) => `${HasMargin}px` ? DefaultMargin : 'auto'};\n${({ DisplayFlex }) => DisplayFlex ? 'flex-wrap:wrap;': ''}\n`\n\nconst Row = styled.div<RowProps>`\nwidth:100%;\nflex-direction:column;\n${({ centered }) => centered ? 'text-align:center':''}\n`\n\nconst Col = styled.div<ColProps>`\nflex-direction:row;\n${({flex})=> flex? `flex:${flex};` : ''}\n`\n\nexport { \n  Row,\n  Col,\n  Container\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx",["65"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  customColor?: string;\n  hoverColor?: string;\n  borderColor?: string;\n}\n\nconst OptionButton = styled.button<Props>`\npadding:20px;\nmargin:1em;\nwidth:15em;\n&:hover{\n  cursor:pointer;\n}\nbackground-color: ${({ customColor }) => customColor ? customColor : '#fff'};\n&:hover { \n  background-color: ${({ hoverColor }) => hoverColor ? hoverColor: '#fff' }\n}\nborder-radius:3px;\nborder:3px solid ${({ borderColor }) => borderColor ? borderColor : '#fff'};\ntransition: all ease-out .2s;\n`\n\nexport { \n  OptionButton\n} ","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Encryption.tsx",["66"],"import '../styles/scss/forms.scss';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components';\nimport { Row, Col } from '../styles/layout/layout';\nimport { OptionButton } from '../styles/buttons';\nimport { FormGroup, FormLabelBlock, FormInputBlock } from '../styles/forms'\n\nconst EncryptionWrapper = styled.div<EncryptionWrapperProps>`\ndisplay:${({ Show }) => Show ? 'block':'none'}\n`\ninterface EncryptionWrapperProps {\nShow: boolean\n}\n\ninterface Props {\n  Active: boolean;\n  Show: boolean\n}\n\nexport const Encryption: React.FC<Props> = (Props)=> {\n  if (Props.Active) {\n    return (\n      <EncryptionWrapper Show={Props.Show} > \n        <Row>\n          <Col flex={1}>\n            <h1> Encryption</h1>\n          </Col>\n         </Row>\n        <Row>\n          <FormGroup>\n            <form>\n              <FormLabelBlock>\n                <label htmlFor=\"encryptpassword\">Enter password you want to decrypt file later.</label>\n              </FormLabelBlock>\n              <FormInputBlock>\n                <input type=\"text\" name=\"encryptpassword\" className=\"form-input\" placeholder=\"Enter your password here\" />\n              </FormInputBlock>\n                <OptionButton type=\"button\" customColor={\"#fff\"} hoverColor={\"#38b13b\"} borderColor={\"#38b13b\"}>Encrypt !</OptionButton>\n            </form>\n            </FormGroup>\n        </Row>\n        </EncryptionWrapper>\n      )\n  } else { \n    return (\n      <div>\n        Module Encryption Inactive\n      </div>\n    )\n  }\n \n} \n\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Decryption.tsx",["67","68"],"import '../styles/scss/forms.scss'\nimport { arch } from \"os\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\nimport { OptionButton } from '../styles/buttons';\nimport { FormGroup,FormLabelBlock,FormInputBlock } from '../styles/forms'\n\n\nconst DecryptionWrapper = styled.div<DecryptionWrapperProps>`\n${({Show})=> Show? 'display:block':''}\n`\ninterface DecryptionWrapperProps {\n  Show: boolean\n}\n\ninterface Props {\n  Active: boolean;\n  Show: boolean;\n}\n\n\nexport const Decryption: React.FC<Props> = ( Props ) => {\n  if (Props.Active) {\n     return (\n       <DecryptionWrapper Show={Props.Show}>\n         <div>\n           <h1> Decryption</h1>\n         </div>\n      \n         <form>\n           <FormGroup>\n             <FormLabelBlock>\n                <label htmlFor=\"pass\">Enter password used to encrypt file</label>\n             </FormLabelBlock>\n             <FormInputBlock>\n                <input type=\"password\" placeholder=\"Enter password here\" className=\"form-input\" />\n              </FormInputBlock>\n            \n           </FormGroup>\n        \n        <OptionButton type=\"button\" customColor={\"#fff\"} hoverColor={\"#e63c3c\"} borderColor={\"#e63c3c\"}>Decrypt !</OptionButton>\n      </form>\n    \n    </DecryptionWrapper>\n    \n  )\n  } else { \n    return (\n      <div>\n        Module Decryption inactive\n      </div>\n    )\n  }\n \n}\n\n\n\n\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Send.tsx",["69","70"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components'\nimport { isPropertySignature } from \"typescript\";\n\ninterface Props {\n  Active: boolean;\n  Show: boolean;\n}\n\ninterface SendWrapperProps { \n  Show: boolean;\n}\n\nconst SendWrapper = styled.div<SendWrapperProps>`\ndisplay:${({Show})=> Show? 'block':'none'}\n`\n\nexport const Send: React.FC<Props> = (Props) => {\n  if (Props.Active) {\n    return (\n      <SendWrapper Show={Props.Show}>\n        <h1> Hello from Send module</h1>\n      </SendWrapper>\n  )\n  } else {\n    return ( \n      <div>\n        Module Send Inactive\n      </div>\n    )\n  }\n  \n}\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Uploader.tsx",["71"],"/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Progress.tsx",["72"],"/home/kamil/Projects/FEncrypt/fencrypt/src/styles/forms.tsx",["73","74"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface InputProps{ \n  size:  {\n    width: string\n    height: string\n  }\n  fontSize?: string\n  fontFamily?: string\n}\n\nconst FormGroup = styled.div`\nflex-direction:column;\n`\nconst FormLabelBlock = styled.div`\nfont-weight:200;\nfont-size:1.5em;\npadding:1em;\n`\n\nconst FormInputBlock = styled.div`\n padding:1em;\n`\n\nexport {\n  FormGroup,\n  FormLabelBlock,\n  FormInputBlock\n}\n\n\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":10,"column":35,"nodeType":"81","messageId":"82","endLine":10,"endColumn":39},{"ruleId":"79","severity":1,"message":"84","line":3,"column":15,"nodeType":"81","messageId":"82","endLine":3,"endColumn":18},{"ruleId":"79","severity":1,"message":"85","line":26,"column":7,"nodeType":"81","messageId":"82","endLine":26,"endColumn":17},{"ruleId":"79","severity":1,"message":"86","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"86","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"87","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},{"ruleId":"79","severity":1,"message":"88","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"87","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":16},{"ruleId":"79","severity":1,"message":"87","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"89","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":29},{"ruleId":"79","severity":1,"message":"87","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"87","line":2,"column":13,"nodeType":"81","messageId":"82","endLine":2,"endColumn":21},{"ruleId":"79","severity":1,"message":"86","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"79","severity":1,"message":"90","line":4,"column":11,"nodeType":"81","messageId":"82","endLine":4,"endColumn":21},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Col' is defined but never used.","'Background' is assigned a value but never used.","'React' is defined but never used.","'ReactDOM' is defined but never used.","'arch' is defined but never used.","'isPropertySignature' is defined but never used.","'InputProps' is defined but never used.","no-global-assign","no-unsafe-negation"]