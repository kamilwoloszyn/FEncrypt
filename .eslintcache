[{"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx":"1","/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts":"2","/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx":"3","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx":"4","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx":"5","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx":"6"},{"size":500,"mtime":1608319067528,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1608199313291,"results":"9","hashOfConfig":"8"},{"size":1283,"mtime":1608649330886,"results":"10","hashOfConfig":"8"},{"size":937,"mtime":1608644381202,"results":"11","hashOfConfig":"8"},{"size":663,"mtime":1608645790393,"results":"12","hashOfConfig":"8"},{"size":581,"mtime":1608636865977,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"ly50gx",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx",[],["31","32"],"/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts",[],"/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx",["33","34","35","36","37","38","39","40","41"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Banner } from './components/shared/Banner';\nimport { Progress } from './components/shared/Progress';\nimport { Uploader } from './components/Uploader';\nimport { Encryption } from './components/Encryption';\nimport { Decryption } from './components/Decryption';\nimport { Send } from './components/Send';\nimport { Col, Row,Container } from './styles/layout/layout';\nimport { OptionButton} from './styles/buttons';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n\nexport const App: React.FC = (ContainerOption) => {\n  return (\n     <Container DisplayFlex={true} HasMargin={true} DefaultMargin={0}>\n      <Row>\n        <Col flex={1}>\n          <Banner ShowBanner={true} />\n        </Col>\n      </Row>\n      <Row>\n        <Row>\n          <Col flex={1}>\n            <h1>Encrypt or Decrypt ?</h1>\n          </Col>\n        </Row>\n        <Row>\n            <OptionButton type=\"button\" customColor={\"#fff\"} hoverColor={\"#38b13b\"} borderColor={\"#38b13b\"}>Encrypt </OptionButton>\n            <OptionButton type=\"button\" customColor={\"#fff\"} hoverColor={\"#e63c3c\"} borderColor={\"#e63c3c\"}>Decrypt </OptionButton>\n        </Row>\n        \n      </Row>\n     </Container>\n\n  );\n}\n\nexport default App;\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx",["42"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Row, Col } from '../../styles/layout/layout'\n\ninterface BackgroundInterface { \n  ContainImage: boolean;\n  BackgroundHref?: string;\n}\n\ninterface BannerWrapperProps { \n  Show: boolean; \n  ExtendedWidth: boolean;\n}\n\ninterface Props { \n  ShowBanner: boolean \n}\n\nconst BannerWrapper = styled.div<BannerWrapperProps>`\n${({ Show }) => Show ? 'display: block;' : ''}\n${({ ExtendedWidth }) => ExtendedWidth ? 'width: 100%;' : ''}\n`\n\nconst Background = styled.div<BackgroundInterface>`\n\nbackground-image: ${({ ContainImage, BackgroundHref }) => ContainImage ? `url(${BackgroundHref})`: '#ffff'}\n`\nexport const Banner: React.FC<Props>  = (Props) => { \n  return ( \n    <BannerWrapper Show={Props.ShowBanner} ExtendedWidth={true}>\n      <Row>\n\n      </Row>\n      <Background ContainImage={false}> \n      Hello From Banner\n      </Background>\n     \n    </BannerWrapper>\n  )\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx",["43"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface ColProps{\n  flex: number\n}\n\ninterface ContainerOption { \n  DisplayFlex: boolean;\n  HasMargin: boolean;\n  DefaultMargin?: number;\n}\n\n\nconst Container = styled.div<ContainerOption>`\n${({DisplayFlex}) => DisplayFlex ? 'display:flex;' : ''}\nmargin: ${({ HasMargin, DefaultMargin }) => `${HasMargin}px` ? DefaultMargin : 'auto'};\n${({ DisplayFlex }) => DisplayFlex ? 'flex-wrap:wrap;': ''}\n`\n\nconst Row = styled.div`\nwidth:100%;\nflex-direction:column;\n`\n\nconst Col = styled.div<ColProps>`\nflex-direction:row;\n${({flex})=> flex? `flex:${flex};` : ''}\n`\n\nexport { \n  Row,\n  Col,\n  Container\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx",["44"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  customColor?: string;\n  hoverColor?: string;\n  borderColor?: string;\n}\n\nconst OptionButton = styled.button<Props>`\npadding:20px;\nwidth:15em;\n&:hover{\n  cursor:pointer;\n}\nbackground-color: ${({ customColor }) => customColor ? customColor : '#fff'};\n&:hover { \n  background-color: ${({ hoverColor }) => hoverColor ? hoverColor: '#fff' }\n}\nborder-radius:3px;\nborder:3px solid ${({ borderColor }) => borderColor ? borderColor : '#fff'};\ntransition: all ease-out .2s;\n`\n\nexport { \n  OptionButton\n} ",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"49","severity":1,"message":"53","line":4,"column":10,"nodeType":"51","messageId":"52","endLine":4,"endColumn":18},{"ruleId":"49","severity":1,"message":"54","line":5,"column":10,"nodeType":"51","messageId":"52","endLine":5,"endColumn":18},{"ruleId":"49","severity":1,"message":"55","line":6,"column":10,"nodeType":"51","messageId":"52","endLine":6,"endColumn":20},{"ruleId":"49","severity":1,"message":"56","line":7,"column":10,"nodeType":"51","messageId":"52","endLine":7,"endColumn":20},{"ruleId":"49","severity":1,"message":"57","line":8,"column":10,"nodeType":"51","messageId":"52","endLine":8,"endColumn":14},{"ruleId":"49","severity":1,"message":"58","line":11,"column":27,"nodeType":"51","messageId":"52","endLine":11,"endColumn":33},{"ruleId":"49","severity":1,"message":"59","line":11,"column":35,"nodeType":"51","messageId":"52","endLine":11,"endColumn":40},{"ruleId":"49","severity":1,"message":"60","line":11,"column":42,"nodeType":"51","messageId":"52","endLine":11,"endColumn":46},{"ruleId":"49","severity":1,"message":"61","line":3,"column":15,"nodeType":"51","messageId":"52","endLine":3,"endColumn":18},{"ruleId":"49","severity":1,"message":"62","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},{"ruleId":"49","severity":1,"message":"62","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":13},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Progress' is defined but never used.","'Uploader' is defined but never used.","'Encryption' is defined but never used.","'Decryption' is defined but never used.","'Send' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Col' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]