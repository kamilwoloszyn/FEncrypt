[{"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx":"1","/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts":"2","/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx":"3","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx":"4","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx":"5","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx":"6","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Encryption.tsx":"7","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Decryption.tsx":"8","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Send.tsx":"9","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Uploader.tsx":"10","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Progress.tsx":"11","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/forms.tsx":"12","/home/kamil/Projects/FEncrypt/fencrypt/src/redux/store.tsx":"13","/home/kamil/Projects/FEncrypt/fencrypt/src/redux/reducer.tsx":"14","/home/kamil/Projects/FEncrypt/fencrypt/src/redux/action.tsx":"15","/home/kamil/Projects/FEncrypt/fencrypt/src/context/PasswordContext.tsx":"16"},{"size":626,"mtime":1609174917230,"results":"17","hashOfConfig":"18"},{"size":425,"mtime":1608199313291,"results":"19","hashOfConfig":"18"},{"size":1619,"mtime":1609192038808,"results":"20","hashOfConfig":"18"},{"size":979,"mtime":1609077469150,"results":"21","hashOfConfig":"18"},{"size":418,"mtime":1609078392834,"results":"22","hashOfConfig":"18"},{"size":593,"mtime":1609070593989,"results":"23","hashOfConfig":"18"},{"size":2149,"mtime":1609187058350,"results":"24","hashOfConfig":"18"},{"size":1996,"mtime":1609185432142,"results":"25","hashOfConfig":"18"},{"size":734,"mtime":1609184925052,"results":"26","hashOfConfig":"18"},{"size":2228,"mtime":1609184764046,"results":"27","hashOfConfig":"18"},{"size":1681,"mtime":1609180853748,"results":"28","hashOfConfig":"18"},{"size":440,"mtime":1609097443089,"results":"29","hashOfConfig":"18"},{"size":160,"mtime":1609174442133,"results":"30","hashOfConfig":"18"},{"size":476,"mtime":1609184367442,"results":"31","hashOfConfig":"18"},{"size":319,"mtime":1609184350258,"results":"32","hashOfConfig":"18"},{"size":229,"mtime":1609192021172,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ly50gx",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx",[],"/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts",[],["76","77"],"/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx",["78","79"],"/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx",["80","81"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Row, Col } from '../../styles/layout/layout'\nimport '../../styles/scss/banner.scss'\nimport LogoImg from '../../images/FEncrypt_logo.png';\n\ninterface BackgroundInterface { \n  ContainImage: boolean;\n  BackgroundHref?: string;\n}\n\ninterface BannerWrapperProps { \n  Show: boolean; \n  ExtendedWidth: boolean;\n}\n\ninterface Props { \n  ShowBanner: boolean \n}\n\nconst BannerWrapper = styled.div<BannerWrapperProps>`\n${({ Show }) => Show ? 'display: block;' : ''}\n${({ ExtendedWidth }) => ExtendedWidth ? 'width: 100%;' : ''}\n`\n\nconst Background = styled.div<BackgroundInterface>`\n\nbackground-image: ${({ ContainImage, BackgroundHref }) => ContainImage ? `url(${BackgroundHref})`: '#ffff'}\n`\nexport const Banner: React.FC<Props>  = (Props) => { \n  return ( \n    <BannerWrapper Show={Props.ShowBanner} ExtendedWidth={true}>\n      <Row>\n        <img src={LogoImg} alt=\"logo\" />\n      </Row>\n    </BannerWrapper>\n  )\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx",["82"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface ContainerOption { \n  DisplayFlex: boolean;\n}\n\n\nconst Container = styled.div<ContainerOption>`\n${({DisplayFlex}) => DisplayFlex ? 'display:flex;flex-direction:column;' : ''}\n\n`\n\nconst Row = styled.div`\ndisplay:flex;\nflex-direction:column;\n\n`\n\nconst Col = styled.div`\ndisplay:flex;\nflex-direction:row;\n`\n\nexport { \n  Row,\n  Col,\n  Container\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx",["83"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  customColor?: string;\n  hoverColor?: string;\n  borderColor?: string;\n}\n\nconst OptionButton = styled.button<Props>`\npadding:5px;\nmargin:0.3em;\nwidth:6em;\n&:hover{\n  cursor:pointer;\n}\nbackground-color: ${({ customColor }) => customColor ? customColor : '#fff'};\n&:hover { \n  background-color: ${({ hoverColor }) => hoverColor ? hoverColor: '#fff' }\n}\nborder-radius:3px;\nborder:2px solid ${({ borderColor }) => borderColor ? borderColor : '#fff'};\ntransition: all ease-out .2s;\n`\n\nexport { \n  OptionButton\n} ","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Encryption.tsx",["84"],"import '../styles/scss/shared/forms.scss';\nimport React,{useEffect,useRef} from \"react\";\nimport styled from 'styled-components';\nimport { Row, Col } from '../styles/layout/layout';\nimport { OptionButton } from '../styles/buttons';\nimport { FormGroup, FormLabelBlock, FormInputBlock } from '../styles/forms';\nimport { Link } from 'react-router-dom';\nimport '../styles/scss/encrypt.scss';\nimport '../styles/scss/shared/text.scss';\nimport '../styles/scss/shared/modal.scss';\nimport { useDispatch } from 'react-redux';\nimport { SetStep } from '../redux/action';\n\nconst EncryptionWrapper = styled.div<EncryptionWrapperProps>`\ndisplay:${({ Show }) => Show ? 'block':'none'}\n`\ninterface EncryptionWrapperProps {\nShow: boolean\n}\n\ninterface Props {\n  Active: boolean;\n  Show: boolean\n}\n\nexport const Encryption: React.FC<Props> = (Props) => {\n  const passwordRef = useRef<HTMLInputElement>(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(SetStep(1))\n  }, [])\n  \n  if (Props.Active) {\n    return (\n      <EncryptionWrapper Show={Props.Show} > \n           <Row>\n            <Col className=\"component-header\">\n              Encryption\n            </Col>\n          </Row>\n          <div className=\"modal-theme\">\n            <Row>\n              <FormGroup>\n                <form>\n                    <FormLabelBlock>\n                        <label htmlFor=\"encryptpassword\">Enter password you want to decrypt file later.</label>\n                      </FormLabelBlock>\n                    <FormInputBlock>\n                        <input type=\"text\" name=\"encryptpassword\" className=\"form-input\" placeholder=\"Enter your password here\" ref={passwordRef} />\n                    </FormInputBlock>\n                    <Link to=\"/send\">\n                      <OptionButton type=\"button\" customColor={\"#fff\"} hoverColor={\"#38b13b\"} borderColor={\"#38b13b\"}>Encrypt !</OptionButton>\n                    </Link>\n                </form>\n              </FormGroup>\n            </Row>\n          </div>\n         \n        </EncryptionWrapper>\n      )\n  } else { \n    return (\n      <div>\n        Module Encryption Inactive\n      </div>\n    )\n  }\n \n} \n\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Decryption.tsx",["85"],"import '../styles/scss/shared/forms.scss'\nimport React,{useEffect, useRef} from \"react\";\nimport styled from \"styled-components\";\nimport { OptionButton } from '../styles/buttons';\nimport { FormGroup, FormLabelBlock, FormInputBlock } from '../styles/forms';\nimport { Link } from 'react-router-dom';\nimport '../styles/scss/encrypt.scss';\nimport '../styles/scss/shared/text.scss';\nimport { Col } from '../styles/layout/layout'; \nimport '../styles/scss/shared/modal.scss';\nimport { useDispatch } from 'react-redux';\nimport { SetStep } from '../redux/action';\n\nconst DecryptionWrapper = styled.div<DecryptionWrapperProps>`\n${({Show})=> Show? 'display:block':''}\n`\ninterface DecryptionWrapperProps {\n  Show: boolean\n}\n\ninterface Props {\n  Active: boolean;\n  Show: boolean;\n}\nexport const Decryption: React.FC<Props> = (Props) => {\n  const dispatch = useDispatch();\n  const passwordRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    dispatch(SetStep(1))\n  },[])\n\n  if (Props.Active) {\n     return (\n       <DecryptionWrapper Show={Props.Show}>\n         <div className=\"component-header\">\n           Decryption\n         </div>\n         <Col>\n           <div className=\"modal-theme\">\n              <form>\n           <FormGroup>\n             <FormLabelBlock>\n                <label htmlFor=\"pass\">Enter password used to encrypt file</label>\n             </FormLabelBlock>\n             <FormInputBlock>\n                   <input type=\"password\" placeholder=\"Enter password here\" className=\"form-input\" ref={passwordRef}/>\n              </FormInputBlock>\n           </FormGroup>\n            <Link to=\"/send\"> <OptionButton type=\"button\" customColor={\"#fff\"} hoverColor={\"#e63c3c\"} borderColor={\"#e63c3c\"}>Decrypt !</OptionButton> </Link>    \n             </form>\n           </div>\n           <div>\n             addadads\n           </div>\n           </Col>\n        </DecryptionWrapper>\n    \n  )\n  } else { \n    return (\n      <div>\n        Module Decryption inactive\n      </div>\n    )\n  }\n \n}\n\n\n\n\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Send.tsx",["86"],"import React,{useEffect} from \"react\";\nimport styled from 'styled-components'\nimport {useDispatch} from 'react-redux'\nimport { SetStep } from '../redux/action';\n\ninterface Props {\n  Active: boolean;\n  Show: boolean;\n}\n\ninterface SendWrapperProps { \n  Show: boolean;\n}\n\nconst SendWrapper = styled.div<SendWrapperProps>`\ndisplay:${({Show})=> Show? 'block':'none'}\n`\nexport const Send: React.FC<Props> = (Props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(SetStep(2))\n  },[])\n  if (Props.Active) {\n    return (\n      <SendWrapper Show={Props.Show}>\n        <h1> Hello from Send module</h1>\n      </SendWrapper>\n  )\n  } else {\n    return ( \n      <div>\n        Module Send Inactive\n      </div>\n    )\n  }\n  \n}\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Uploader.tsx",["87","88","89"],"import React,{useEffect} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components';\nimport { Row, Col } from '../styles/layout/layout';\nimport { OptionButton } from '../styles/buttons';\nimport '../styles/scss/uploader.scss';\nimport '../styles/scss/shared/modal.scss';\nimport '../styles/scss/shared/responsive.scss';\nimport DatabaseCloud from '../images/database-cloud.png';\nimport FileIcon from '../images/file.png';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { SetStep } from '../redux/action';\n\ninterface Props {\n  Active: boolean;\n  Show: boolean;\n}\n\ninterface UploadWrapperProps {\n  Show: boolean\n}\n  \nconst UploadWrapper = styled.div<UploadWrapperProps>`\n  ${({ Show }) => Show ? '':'display:none'}\n`\n\nexport const Uploader: React.FC<Props> = (Props) => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(SetStep(0))\n  }, [])\n  \n  if (Props.Active) {\n    return (\n      <UploadWrapper Show={Props.Show} >\n        <Col className=\"responsive-flexbox item-wrapper\">\n          <Row className=\"modal-theme\">\n            <div className=\"modal-item\">\n             First, click to Upload icon\n            </div>\n            <div className=\"modal-item\">\n              <form>\n                <label htmlFor=\"styleupload\" ><img src={FileIcon} /></label>\n                <input type=\"file\" name=\"filetoupload\" id=\"styleupload\" />\n              </form>\n            </div>\n          <div className=\"modal-item\">\n            Then select Encrypt or Decrypt operation\n          </div>\n          <Col className=\"modal-item modal-centered\">\n            <Link to=\"/encrypt\"> <OptionButton type=\"button\" customColor={\"#38b13b\"} hoverColor={\"#38b13b\"} borderColor={\"#38b13b\"}>Encrypt </OptionButton> </Link> \n            <Link to=\"/decrypt\"><OptionButton type=\"button\" customColor={\"#e63a2a\"} hoverColor={\"#e63c3c\"} borderColor={\"#e63c3c\"}>Decrypt </OptionButton></Link> \n          </Col>\n          </Row>\n          <div>\n            <img src={DatabaseCloud} alt=\"icon\" className=\"responsive-image\" />\n          </div>\n        </Col>\n      </UploadWrapper>\n    )\n  } else {\n    return (\n      <div>\n        Module inactive\n      </div>\n    )\n  }\n}\n\n\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Progress.tsx",["90"],"import React,{useState, useEffect} from \"react\";\nimport styled from 'styled-components';\nimport '../../styles/scss/progress.scss';\nimport { useSelector } from \"react-redux\";\nimport { StepState } from '../../redux/reducer';\n\ninterface Props { \n  Active: boolean;\n  Show: boolean;\n}\n\ninterface StepProps {\n  stepId: number;\n  current: number;\n}\n\ninterface ProgressWrapperProps {\n  Show:boolean\n}\n\nconst ProgressWrapper = styled.div<ProgressWrapperProps>`\ndisplay:${({ Show })=> Show ?'block':'none'}\n`\nconst StyledStep = styled.span<StepProps>`\n${({ stepId, current }) => (current > stepId) ? 'background-color: #e88d58' : ''}\n${({stepId,current})=> (current == stepId )? 'background-color:#dcdbdf': ''}\n`\n\nexport const Progress: React.FC<Props> = (Props) => {\n  const currentStep = useSelector<StepState, StepState[\"currentStep\"]>((state) => state.currentStep)\n  const [step, setStep] = useState<number>(0);\n  useEffect(() => {\n    setStep(currentStep)\n  },[currentStep])\n  if (Props.Active) { \n    return (\n      <ProgressWrapper Show={Props.Show} className=\"progress-wrapper\">\n        <div className=\"steps-group\">\n          <div className=\"step-group\">\n            <StyledStep className=\"step\" stepId={0} current={step}>1</StyledStep>\n          </div>\n          <div className=\"step-group\">\n            <StyledStep className=\"step\" stepId={1} current={step}>2</StyledStep>\n          </div>\n          <div className=\"step-group\">\n            <StyledStep className=\"step\" stepId={2} current={step}>3</StyledStep>\n          </div>\n        </div>\n      </ProgressWrapper>\n    \n  )\n  } else { \n    return (\n      <h1> Module Progress inactive</h1>\n    )\n  }\n}\nexport default Progress;","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/forms.tsx",["91","92"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface InputProps{ \n  size:  {\n    width: string\n    height: string\n  }\n  fontSize?: string\n  fontFamily?: string\n}\n\nconst FormGroup = styled.div`\nflex-direction:column;\n`\nconst FormLabelBlock = styled.div`\nfont-weight:200;\nfont-size:1em;\npadding:1em;\n`\n\nconst FormInputBlock = styled.div`\n padding:.3em;\n`\n\nexport {\n  FormGroup,\n  FormLabelBlock,\n  FormInputBlock\n}\n\n\n","/home/kamil/Projects/FEncrypt/fencrypt/src/redux/store.tsx",["93"],"/home/kamil/Projects/FEncrypt/fencrypt/src/redux/reducer.tsx",["94","95"],"/home/kamil/Projects/FEncrypt/fencrypt/src/redux/action.tsx",["96"],"/home/kamil/Projects/FEncrypt/fencrypt/src/context/PasswordContext.tsx",[],{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","severity":1,"message":"102","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":14},{"ruleId":"101","severity":1,"message":"105","line":10,"column":35,"nodeType":"103","messageId":"104","endLine":10,"endColumn":39},{"ruleId":"101","severity":1,"message":"106","line":3,"column":15,"nodeType":"103","messageId":"104","endLine":3,"endColumn":18},{"ruleId":"101","severity":1,"message":"107","line":26,"column":7,"nodeType":"103","messageId":"104","endLine":26,"endColumn":17},{"ruleId":"101","severity":1,"message":"108","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"108","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"109","severity":1,"message":"110","line":31,"column":6,"nodeType":"111","endLine":31,"endColumn":8,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"110","line":31,"column":5,"nodeType":"111","endLine":31,"endColumn":7,"suggestions":"113"},{"ruleId":"109","severity":1,"message":"110","line":22,"column":5,"nodeType":"111","endLine":22,"endColumn":7,"suggestions":"114"},{"ruleId":"101","severity":1,"message":"115","line":2,"column":8,"nodeType":"103","messageId":"104","endLine":2,"endColumn":16},{"ruleId":"109","severity":1,"message":"110","line":32,"column":6,"nodeType":"111","endLine":32,"endColumn":8,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":44,"column":47,"nodeType":"119","endLine":44,"endColumn":69},{"ruleId":"120","severity":1,"message":"121","line":26,"column":33,"nodeType":"122","messageId":"123","endLine":26,"endColumn":35},{"ruleId":"101","severity":1,"message":"108","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"124","line":4,"column":11,"nodeType":"103","messageId":"104","endLine":4,"endColumn":21},{"ruleId":"101","severity":1,"message":"108","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"108","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},{"ruleId":"101","severity":1,"message":"125","line":2,"column":10,"nodeType":"103","messageId":"104","endLine":2,"endColumn":13},{"ruleId":"101","severity":1,"message":"108","line":1,"column":8,"nodeType":"103","messageId":"104","endLine":1,"endColumn":13},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Col' is defined but never used.","'Background' is assigned a value but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["128"],["129"],["130"],"'ReactDOM' is defined but never used.",["131"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'InputProps' is defined but never used.","'act' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"132","fix":"134"},{"desc":"132","fix":"135"},{"desc":"132","fix":"136"},"Update the dependencies array to be: [dispatch]",{"range":"137","text":"138"},{"range":"139","text":"138"},{"range":"140","text":"138"},{"range":"141","text":"138"},[972,974],"[dispatch]",[962,964],[497,499],[922,924]]