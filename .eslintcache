[{"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx":"1","/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts":"2","/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx":"3","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx":"4","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx":"5","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx":"6","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Encryption.tsx":"7","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Decryption.tsx":"8","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Send.tsx":"9","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Uploader.tsx":"10","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Progress.tsx":"11","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/forms.tsx":"12"},{"size":500,"mtime":1608319067528,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1608199313291,"results":"15","hashOfConfig":"14"},{"size":1356,"mtime":1609077645544,"results":"16","hashOfConfig":"14"},{"size":979,"mtime":1609077469150,"results":"17","hashOfConfig":"14"},{"size":418,"mtime":1609078392834,"results":"18","hashOfConfig":"14"},{"size":593,"mtime":1609070593989,"results":"19","hashOfConfig":"14"},{"size":1821,"mtime":1609149387275,"results":"20","hashOfConfig":"14"},{"size":1729,"mtime":1609149786133,"results":"21","hashOfConfig":"14"},{"size":637,"mtime":1608665700864,"results":"22","hashOfConfig":"14"},{"size":2063,"mtime":1609147754387,"results":"23","hashOfConfig":"14"},{"size":1057,"mtime":1609001774564,"results":"24","hashOfConfig":"14"},{"size":440,"mtime":1609097443089,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"ly50gx",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"28"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"28"},"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx",[],["58","59"],"/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts",[],"/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx",["60","61"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Banner } from './components/shared/Banner';\nimport { Progress } from './components/shared/Progress';\nimport { Uploader } from './components/Uploader';\nimport { Encryption } from './components/Encryption';\nimport { Decryption } from './components/Decryption';\nimport { Send } from './components/Send';\nimport { Col, Row,Container } from './styles/layout/layout';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport './styles/scss/main.scss';\nexport const App: React.FC = (ContainerOption) => {\n  return (\n\n    <Container DisplayFlex={true} className=\"main-wrapper\">\n      <div className=\"main-bg\"></div>\n      <Row>\n        <Col>\n          <Banner ShowBanner={true} />\n        </Col>\n        <Col>\n          <Progress Active={true} Show={true} Step={1}/>\n        </Col>\n      </Row>\n      <Row>\n        <Router>\n          <Route path=\"/\" exact render={() => <Uploader Active={true} Show={true}/>} />\n          <Route path=\"/encrypt\" render={() => <Encryption Active={true} Show={true}/>} />\n          <Route path=\"/decrypt\" render={ ()=> <Decryption Active={true} Show={true} />}/>\n          <Route path=\"/send\" render={() => <Send Active={true} Show={true} />}/>\n        </Router>\n      </Row>\n     </Container>\n    \n     \n\n  );\n}\n\nexport default App;\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx",["62","63"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Row, Col } from '../../styles/layout/layout'\nimport '../../styles/scss/banner.scss'\nimport LogoImg from '../../images/FEncrypt_logo.png';\n\ninterface BackgroundInterface { \n  ContainImage: boolean;\n  BackgroundHref?: string;\n}\n\ninterface BannerWrapperProps { \n  Show: boolean; \n  ExtendedWidth: boolean;\n}\n\ninterface Props { \n  ShowBanner: boolean \n}\n\nconst BannerWrapper = styled.div<BannerWrapperProps>`\n${({ Show }) => Show ? 'display: block;' : ''}\n${({ ExtendedWidth }) => ExtendedWidth ? 'width: 100%;' : ''}\n`\n\nconst Background = styled.div<BackgroundInterface>`\n\nbackground-image: ${({ ContainImage, BackgroundHref }) => ContainImage ? `url(${BackgroundHref})`: '#ffff'}\n`\nexport const Banner: React.FC<Props>  = (Props) => { \n  return ( \n    <BannerWrapper Show={Props.ShowBanner} ExtendedWidth={true}>\n      <Row>\n        <img src={LogoImg} alt=\"logo\" />\n      </Row>\n    </BannerWrapper>\n  )\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx",["64"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface ContainerOption { \n  DisplayFlex: boolean;\n}\n\n\nconst Container = styled.div<ContainerOption>`\n${({DisplayFlex}) => DisplayFlex ? 'display:flex;flex-direction:column;' : ''}\n\n`\n\nconst Row = styled.div`\ndisplay:flex;\nflex-direction:column;\n\n`\n\nconst Col = styled.div`\ndisplay:flex;\nflex-direction:row;\n`\n\nexport { \n  Row,\n  Col,\n  Container\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx",["65"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  customColor?: string;\n  hoverColor?: string;\n  borderColor?: string;\n}\n\nconst OptionButton = styled.button<Props>`\npadding:5px;\nmargin:0.3em;\nwidth:6em;\n&:hover{\n  cursor:pointer;\n}\nbackground-color: ${({ customColor }) => customColor ? customColor : '#fff'};\n&:hover { \n  background-color: ${({ hoverColor }) => hoverColor ? hoverColor: '#fff' }\n}\nborder-radius:3px;\nborder:2px solid ${({ borderColor }) => borderColor ? borderColor : '#fff'};\ntransition: all ease-out .2s;\n`\n\nexport { \n  OptionButton\n} ","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Encryption.tsx",[],"/home/kamil/Projects/FEncrypt/fencrypt/src/components/Decryption.tsx",[],"/home/kamil/Projects/FEncrypt/fencrypt/src/components/Send.tsx",["66","67"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components'\nimport { isPropertySignature } from \"typescript\";\n\ninterface Props {\n  Active: boolean;\n  Show: boolean;\n}\n\ninterface SendWrapperProps { \n  Show: boolean;\n}\n\nconst SendWrapper = styled.div<SendWrapperProps>`\ndisplay:${({Show})=> Show? 'block':'none'}\n`\n\nexport const Send: React.FC<Props> = (Props) => {\n  if (Props.Active) {\n    return (\n      <SendWrapper Show={Props.Show}>\n        <h1> Hello from Send module</h1>\n      </SendWrapper>\n  )\n  } else {\n    return ( \n      <div>\n        Module Send Inactive\n      </div>\n    )\n  }\n  \n}\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Uploader.tsx",["68","69"],"/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Progress.tsx",["70"],"import React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport styled from 'styled-components';\nimport '../../styles/scss/progress.scss'\ninterface Props { \n  Active: boolean;\n  Show: boolean;\n  Step: number;\n}\n\ninterface ProgressWrapperProps {\n  Show:boolean\n}\n\nconst ProgressWrapper = styled.div<ProgressWrapperProps>`\ndisplay:${({ Show })=> Show ?'block':'none'}\n`\n\nexport const Progress: React.FC<Props> = (Props) => {\n  if (Props.Active) { \n    return (\n      <ProgressWrapper Show={Props.Show} className=\"progress-wrapper\">\n        <div className=\"steps-group\">\n          <div className=\"step-group\">\n            <span className=\"step visited\">1</span>\n          </div>\n          <div className=\"step-group\">\n            <span className=\"step visited\">2</span>\n          </div>\n          <div className=\"step-group\">\n            <span className=\"step\">3</span>\n          </div>\n          \n        </div>\n      </ProgressWrapper>\n    \n  )\n  } else { \n    return (\n      <h1> Module Progress inactive</h1>\n    )\n  }\n}\n\n\nexport default Progress;","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/forms.tsx",["71","72"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface InputProps{ \n  size:  {\n    width: string\n    height: string\n  }\n  fontSize?: string\n  fontFamily?: string\n}\n\nconst FormGroup = styled.div`\nflex-direction:column;\n`\nconst FormLabelBlock = styled.div`\nfont-weight:200;\nfont-size:1em;\npadding:1em;\n`\n\nconst FormInputBlock = styled.div`\n padding:.3em;\n`\n\nexport {\n  FormGroup,\n  FormLabelBlock,\n  FormInputBlock\n}\n\n\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":10,"column":35,"nodeType":"79","messageId":"80","endLine":10,"endColumn":39},{"ruleId":"77","severity":1,"message":"82","line":3,"column":15,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},{"ruleId":"77","severity":1,"message":"83","line":26,"column":7,"nodeType":"79","messageId":"80","endLine":26,"endColumn":17},{"ruleId":"77","severity":1,"message":"84","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"84","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"85","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"77","severity":1,"message":"86","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":29},{"ruleId":"77","severity":1,"message":"85","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":37,"column":47,"nodeType":"89","endLine":37,"endColumn":69},{"ruleId":"77","severity":1,"message":"85","line":2,"column":13,"nodeType":"79","messageId":"80","endLine":2,"endColumn":21},{"ruleId":"77","severity":1,"message":"84","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":13},{"ruleId":"77","severity":1,"message":"90","line":4,"column":11,"nodeType":"79","messageId":"80","endLine":4,"endColumn":21},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Col' is defined but never used.","'Background' is assigned a value but never used.","'React' is defined but never used.","'ReactDOM' is defined but never used.","'isPropertySignature' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InputProps' is defined but never used.","no-global-assign","no-unsafe-negation"]