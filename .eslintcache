[{"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx":"1","/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts":"2","/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx":"3","/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx":"4","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx":"5","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx":"6","/home/kamil/Projects/FEncrypt/fencrypt/src/router/router.tsx":"7","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Encryption.tsx":"8","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Decryption.tsx":"9","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Send.tsx":"10","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Uploader.tsx":"11"},{"size":500,"mtime":1608319067528,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1608199313291,"results":"14","hashOfConfig":"13"},{"size":1202,"mtime":1608665377560,"results":"15","hashOfConfig":"13"},{"size":937,"mtime":1608644381202,"results":"16","hashOfConfig":"13"},{"size":663,"mtime":1608645790393,"results":"17","hashOfConfig":"13"},{"size":581,"mtime":1608636865977,"results":"18","hashOfConfig":"13"},{"size":717,"mtime":1608654880729,"results":"19","hashOfConfig":"13"},{"size":633,"mtime":1608549976334,"results":"20","hashOfConfig":"13"},{"size":826,"mtime":1608549874188,"results":"21","hashOfConfig":"13"},{"size":632,"mtime":1608553943019,"results":"22","hashOfConfig":"13"},{"size":1226,"mtime":1608664412244,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"ly50gx",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},"/home/kamil/Projects/FEncrypt/fencrypt/src/index.tsx",[],["54","55"],"/home/kamil/Projects/FEncrypt/fencrypt/src/reportWebVitals.ts",[],"/home/kamil/Projects/FEncrypt/fencrypt/src/App.tsx",["56","57","58","59","60"],"/home/kamil/Projects/FEncrypt/fencrypt/src/components/shared/Banner.tsx",["61"],"import React from 'react';\nimport styled from 'styled-components';\nimport { Row, Col } from '../../styles/layout/layout'\n\ninterface BackgroundInterface { \n  ContainImage: boolean;\n  BackgroundHref?: string;\n}\n\ninterface BannerWrapperProps { \n  Show: boolean; \n  ExtendedWidth: boolean;\n}\n\ninterface Props { \n  ShowBanner: boolean \n}\n\nconst BannerWrapper = styled.div<BannerWrapperProps>`\n${({ Show }) => Show ? 'display: block;' : ''}\n${({ ExtendedWidth }) => ExtendedWidth ? 'width: 100%;' : ''}\n`\n\nconst Background = styled.div<BackgroundInterface>`\n\nbackground-image: ${({ ContainImage, BackgroundHref }) => ContainImage ? `url(${BackgroundHref})`: '#ffff'}\n`\nexport const Banner: React.FC<Props>  = (Props) => { \n  return ( \n    <BannerWrapper Show={Props.ShowBanner} ExtendedWidth={true}>\n      <Row>\n\n      </Row>\n      <Background ContainImage={false}> \n      Hello From Banner\n      </Background>\n     \n    </BannerWrapper>\n  )\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/layout/layout.tsx",["62"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface ColProps{\n  flex: number\n}\n\ninterface ContainerOption { \n  DisplayFlex: boolean;\n  HasMargin: boolean;\n  DefaultMargin?: number;\n}\n\n\nconst Container = styled.div<ContainerOption>`\n${({DisplayFlex}) => DisplayFlex ? 'display:flex;' : ''}\nmargin: ${({ HasMargin, DefaultMargin }) => `${HasMargin}px` ? DefaultMargin : 'auto'};\n${({ DisplayFlex }) => DisplayFlex ? 'flex-wrap:wrap;': ''}\n`\n\nconst Row = styled.div`\nwidth:100%;\nflex-direction:column;\n`\n\nconst Col = styled.div<ColProps>`\nflex-direction:row;\n${({flex})=> flex? `flex:${flex};` : ''}\n`\n\nexport { \n  Row,\n  Col,\n  Container\n}","/home/kamil/Projects/FEncrypt/fencrypt/src/styles/buttons.tsx",["63"],"import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  customColor?: string;\n  hoverColor?: string;\n  borderColor?: string;\n}\n\nconst OptionButton = styled.button<Props>`\npadding:20px;\nwidth:15em;\n&:hover{\n  cursor:pointer;\n}\nbackground-color: ${({ customColor }) => customColor ? customColor : '#fff'};\n&:hover { \n  background-color: ${({ hoverColor }) => hoverColor ? hoverColor: '#fff' }\n}\nborder-radius:3px;\nborder:3px solid ${({ borderColor }) => borderColor ? borderColor : '#fff'};\ntransition: all ease-out .2s;\n`\n\nexport { \n  OptionButton\n} ","/home/kamil/Projects/FEncrypt/fencrypt/src/router/router.tsx",["64"],"/home/kamil/Projects/FEncrypt/fencrypt/src/components/Encryption.tsx",["65"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components';\n\nconst EncryptionWrapper = styled.div<EncryptionWrapperProps>`\ndisplay:${({ Show }) => Show ? 'block':'none'}\n`\ninterface EncryptionWrapperProps {\nShow: boolean\n}\n\ninterface Props {\n  Active: boolean;\n  Show: boolean\n}\n\nexport const Encryption: React.FC<Props> = (Props)=> {\n  if (Props.Active) {\n    return (\n      <EncryptionWrapper Show={Props.Show} > \n          <h1> Hello from Encryption module</h1>\n        </EncryptionWrapper>\n      )\n  } else { \n    return (\n      <div>\n        Module Inactive\n      </div>\n    )\n  }\n \n} \n\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Decryption.tsx",["66","67"],"import { arch } from \"os\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from \"styled-components\";\n\nconst DecryptionWrapper = styled.div<DecryptionWrapperProps>`\ndisplay:${({Show})=> Show? 'block':'none'}\n`\ninterface DecryptionWrapperProps {\n  Show: boolean\n}\n\ninterface Props {\n  Active: boolean;\n  Show: boolean;\n}\n\n\nexport const Decryption: React.FC<Props> = ( Props ) => {\n  if (Props.Active) {\n     return (\n       <DecryptionWrapper Show={Props.Show}>\n         <div>\n           <h1> Decryption</h1>\n         </div>\n      \n      <form>\n        <input type=\"file\" />\n        <input type=\"password\" />\n        <input type=\"button\">Decrypt !</input>\n      </form>\n    \n    </DecryptionWrapper>\n    \n  )\n  } else { \n    return (\n      <div>\n        Module inactive\n      </div>\n    )\n  }\n \n}\n\n\n\n\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Send.tsx",["68","69"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components'\nimport { isPropertySignature } from \"typescript\";\n\ninterface Props {\n  Active: boolean;\n  Show: boolean;\n}\n\ninterface SendWrapperProps { \n  Show: boolean;\n}\n\nconst SendWrapper = styled.div<SendWrapperProps>`\ndisplay:${({Show})=> Show? 'block':'none'}\n`\n\nexport const Send: React.FC<Props> = (Props) => {\n  if (Props.Active) {\n    return (\n      <SendWrapper Show={Props.Show}>\n        <h1> Hello from Send module</h1>\n      </SendWrapper>\n  )\n  } else {\n    return ( \n      <div>\n        Module Inactive\n      </div>\n    )\n  }\n  \n}\n","/home/kamil/Projects/FEncrypt/fencrypt/src/components/Uploader.tsx",["70"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport styled from 'styled-components';\nimport { Row, Col } from '../styles/layout/layout';\nimport { OptionButton } from '../styles/buttons'\n\ninterface Props {\n  Active: boolean;\n  Show: boolean;\n}\n\ninterface UploadWrapperProps {\n  Show: boolean\n}\n  \nconst UploadWrapper = styled.div<UploadWrapperProps>`\n  ${({ Show }) => Show ? '':'display:none'}\n`\n\nexport const Uploader: React.FC<Props> = (Props) => {\n  if (Props.Active) {\n    return (\n      <UploadWrapper Show={Props.Show}>\n        <Row>\n          <code> Welcome to File Encryptor! Select file and action</code>\n        </Row>\n        <Row>\n          <input type=\"file\" />\n        </Row>\n        <Row>\n          <Col flex={1}>\n              <h1>Encrypt or Decrypt ?</h1>\n          </Col>\n        </Row>\n        <Row>\n          <OptionButton type=\"button\" customColor={\"#fff\"} hoverColor={\"#38b13b\"} borderColor={\"#38b13b\"}>Encrypt </OptionButton>\n          <OptionButton type=\"button\" customColor={\"#fff\"} hoverColor={\"#e63c3c\"} borderColor={\"#e63c3c\"}>Decrypt </OptionButton>\n        </Row>\n      </UploadWrapper>\n    )\n  } else {\n    return (\n      <div>\n        Module inactive\n      </div>\n    )\n  }\n}\n\n\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":18},{"ruleId":"75","severity":1,"message":"80","line":10,"column":10,"nodeType":"77","messageId":"78","endLine":10,"endColumn":22},{"ruleId":"75","severity":1,"message":"81","line":11,"column":10,"nodeType":"77","messageId":"78","endLine":11,"endColumn":19},{"ruleId":"75","severity":1,"message":"82","line":12,"column":35,"nodeType":"77","messageId":"78","endLine":12,"endColumn":39},{"ruleId":"75","severity":1,"message":"83","line":3,"column":15,"nodeType":"77","messageId":"78","endLine":3,"endColumn":18},{"ruleId":"75","severity":1,"message":"84","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"84","line":1,"column":8,"nodeType":"77","messageId":"78","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"82","line":2,"column":42,"nodeType":"77","messageId":"78","endLine":2,"endColumn":46},{"ruleId":"75","severity":1,"message":"85","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"86","line":1,"column":10,"nodeType":"77","messageId":"78","endLine":1,"endColumn":14},{"ruleId":"75","severity":1,"message":"85","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":16},{"ruleId":"75","severity":1,"message":"85","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"87","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":29},{"ruleId":"75","severity":1,"message":"85","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'Progress' is defined but never used.","'OptionButton' is defined but never used.","'AppRouter' is defined but never used.","'Link' is defined but never used.","'Col' is defined but never used.","'React' is defined but never used.","'ReactDOM' is defined but never used.","'arch' is defined but never used.","'isPropertySignature' is defined but never used.","no-global-assign","no-unsafe-negation"]